Kernel command line: -q -f put rox-multichild put child-rox run rox-multichild
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  117,760,000 loops/s.
hd0:0: detected 321 sector (160 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 220 sector (110 kB) disk, model "QEMU HARDDISK", serial "QM00003"
Formatting file system...done.
Boot complete.
Putting 'rox-multichild' into the file system...
Putting 'child-rox' into the file system...
Executing 'rox-multichild':
(rox-multichild) begin
(rox-multichild) open "child-rox"
(rox-multichild) read "child-rox"
(rox-multichild) write "child-rox"
(rox-multichild) exec "child-rox 5"
Page fault at 0x4256000: not present error writing page in kernel context.
Interrupt 0x0e (#PF Page-Fault Exception) at rip=8004216dd3
 cr2=0000000004256000 error=               2
rax 0000000004256000 rbx 0000000000000000 rcx 0000000004256001 rdx 0000000000000060
rsp 000000800424ce70 rbp 000000800424cea0 rsi 000000800424cef8 rdi 0000000004256000
rip 0000008004216dd3 r8 0000000000000000  r9 0000000000000000 r10 0000000000000000
r11 0000000000000216 r12 000000800421cebd r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000206
es: 001b ds: 001b cs: 0008 ss: 0010
Kernel PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x8004217e2a 0x800421cbf2 0x800421cd71 0x8004208d07 0x8004209125 0x800421785d 0x800421d252 0x800421cf64 0x800421cde6 0x40026d 0x4003c5 0x400e66.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 74 ticks
Thread: 30 idle ticks, 35 kernel ticks, 9 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 114 reads, 479 writes
hd1:0: 220 reads, 0 writes
Console: 1994 characters output
Key